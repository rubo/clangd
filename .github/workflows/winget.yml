name: Publish on Windows Package Manager

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: Release tag (version)
        required: true

jobs:
  publish-winget:
    name: Publish
    runs-on: windows-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'release' && !github.event.release.prerelease
    steps:
      - name: Configure parameters
        id: params
        run: |
          if ("${{ github.event_name }}" -eq "release") {
            echo "assets_url=${{ github.event.release.assets_url }}" >> $env:GITHUB_OUTPUT
            echo "version=${{ github.event.release.tag_name }}" >> $env:GITHUB_OUTPUT
          } else {
            $releaseUrl = "$env:GITHUB_API_URL/repos/clangd/clangd/releases/tags/${{ github.event.inputs.tag_name }}"
            $assetsUrl = curl -sL $releaseUrl | ConvertFrom-Json | Select-Object -ExpandProperty assets_url
            echo "assets_url=$assetsUrl" >> $env:GITHUB_OUTPUT
            echo "version=${{ github.event.inputs.tag_name }}" >> $env:GITHUB_OUTPUT
          }

      - name: Set up Windows Package Manager Manifest Creator
        run: |
          curl -sL https://aka.ms/wingetcreate/latest -o wingetcreate.exe
          ./wingetcreate info

      - name: Submit package
        env:
          WINGET_CREATE_GITHUB_TOKEN: ${{ secrets.WINGET_TOKEN }}
        run: |
          $releaseUrl = curl -sL ${{ steps.params.outputs.assets_url }} | ConvertFrom-Json
            | Where-Object -Property name -like "clangd-windows-*.zip"
            | Select-Object -ExpandProperty browser_download_url
          
          ./wingetcreate update LLVM.clangd -v ${{ steps.params.outputs.version }} -u $releaseUrl -o winget-pkgs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: manifest
          path: winget-pkgs
          retention-days: 1
          if-no-files-found: error
