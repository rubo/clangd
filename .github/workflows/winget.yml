name: Publish on Windows Package Manager

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: Release tag (version)
        required: true

jobs:
  publish-winget:
    name: Publish
    runs-on: windows-2025
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'release' && !github.event.release.prerelease
    steps:
      - name: Configure parameters
        id: params
        run: |
          if ("${{ github.event_name }}" -eq "release") {
            echo "assets_url=${{ github.event.release.assets_url }}" >> $env:GITHUB_ENV
            echo "version=${{ github.event.release.tag_name }}" >> $env:GITHUB_ENV
          } else {
            $releaseUrl = "https://api.github.com/repos/clangd/clangd/releases/tags/${{ github.event.inputs.tag_name }}"
            $assetsUrl = curl -sL $releaseUrl | ConvertFrom-Json | Select -ExpandProperty assets_url
            echo "assets_url=$assetsUrl" >> $env:GITHUB_OUTPUT
            echo "version=${{ github.event.inputs.tag_name }}" >> $env:GITHUB_OUTPUT
          }

      - name: Set up komac
        run: |
          $releaseUrl = "https://api.github.com/repos/russellbanks/Komac/releases/latest"
          $downloadUrl = curl -sL $releaseUrl | ConvertFrom-Json | Select -ExpandProperty assets_url |
            Where-Object -Property name -like 'komac-*-x86_64-pc-windows-msvc.exe' | Select -ExpandProperty browser_download_url
          curl -sL $downloadUrl -o komac.exe

      - name: Submit package
        env:
          GITHUB_TOKEN: ${{ secrets.WINGET_TOKEN }}
        run: |
          where komac
          $releaseInfo = curl -sL ${{ steps.params.outputs.assets_url }} | ConvertFrom-Json
          $releaseUrl = $releaseInfo | Where-Object -Property name -like 'clangd-windows-*.zip' | Select -ExpandProperty browser_download_url
          $version = ${{ steps.params.outputs.version }}
          echo $releaseUrl
          echo $version
          #./komac sync-fork
          ./komac update -v $version -u $releaseUrl --dry-run -o winget-pkgs
          $installerPath = "winget-pkgs/manifests/l/LLVM/clangd/$version/LLVM.clangd.installer.yaml"
          (Get-Content $installerPath) -replace '^(\s*-\s+RelativeFilePath:\s+).*$', ('${1}clang_' + $version + '/bin/clangd.exe') |
            Set-Content $installerPath
          ./komac submit winget-pkgs -y --dry-run
